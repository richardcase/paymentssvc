// Code generated by go-swagger; DO NOT EDIT.

package payment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetPaymentByIDHandlerFunc turns a function with the right signature into a get payment by Id handler
type GetPaymentByIDHandlerFunc func(GetPaymentByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetPaymentByIDHandlerFunc) Handle(params GetPaymentByIDParams) middleware.Responder {
	return fn(params)
}

// GetPaymentByIDHandler interface for that can handle valid get payment by Id params
type GetPaymentByIDHandler interface {
	Handle(GetPaymentByIDParams) middleware.Responder
}

// NewGetPaymentByID creates a new http.Handler for the get payment by Id operation
func NewGetPaymentByID(ctx *middleware.Context, handler GetPaymentByIDHandler) *GetPaymentByID {
	return &GetPaymentByID{Context: ctx, Handler: handler}
}

/*GetPaymentByID swagger:route GET /payments/{id} payment getPaymentById

Find a payment by ID

Returns a single payment

*/
type GetPaymentByID struct {
	Context *middleware.Context
	Handler GetPaymentByIDHandler
}

func (o *GetPaymentByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetPaymentByIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
